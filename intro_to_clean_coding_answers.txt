1. In your own words, explain what clean code is and why it is important.

I think having clean code means it is very simple and efficient. The names of variables and functions should be easy to understand, code that is easy to maintain and easy to change. If someone else looks at your code they should be able to understand what you wrote.

2. Read this article about Toyota and their use of bad code.
Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.

DNA sequencing: The computer could translate the triplet DNA code into an amino acid sequence and print it out. If the code was not created to an acceptable standard it could ruin the data or even scramble the DNA code sequences.

3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

I do not think this is clean code because I would put the comments above the code of the line it is referring to. Function, parameter and variable names should be more descriptive. Erase unnecessary comments that are self-explanatory.

FUNCTION convertTemp(temp, type)
  IF type = "F" THEN
    // Formula to convert degrees fahrenheit to celsius
    SET newTemp to (temperatureâˆ’32) * (5/9)
    PRINT newTemp
  ELSE IF type = "C" THEN
    //Formula to convert degrees celsius to fahrenheit
    SET newTemp to temperature * 1.8000 + 32.00
    PRINT newTemp
   END IF
END FUNCTION

4. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

I would consider it not to be clean code because PRINT percentage should be nested inside of the first if operation

FUNCTION calcPercent(sum, total)
  IF NOT(total = 0) THEN
    SET percentage to sum / total * 100 AND PRINT percentage
  ELSE
    PRINT "Sorry, cannot divide by 0"
  END IF
  END FUNCTION

5. Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.
  a. The following function prints the subtotal of a customer's transaction and receives payment accordingly.

FUNCTION checkPaymentType(subTotal, discountRate, paymentType)
   PRINT "Your total due is: " + calculateChange(subTotal, discountRate)

   IF paymentType = 'CASH' THEN
       CALL getPayment RETURNING amount
       PRINT "Change due: " + amount - calculateChange(subTotal, discountRate)
   ELSE IF paymentType = 'CREDIT CARD' THEN
       CALL getPayment RETURNING amount
       PRINT "Your credit card has been charged: " + calculateChange(subTotal, discountRate)
   END IF
END FUNCTION

FUNCTION calculateChange(subTotal, discountRate)
    RETURN subTotal * discountRate + (subTotal * tax)

END FUNCTION

  b. FUNCTION checkoutBook(book, guest)
       IF guest.accountActive AND NOT(guest.hasOverdueBooks) THEN
         IF guest.outstandingFees = 0 THEN
           APPEND book to guest.books
           SET book.status to "Checked Out"
           PRINT "Your books have been issued."
         END IF
       ELSE
          PRINT "Unable to check out book."
         END IF
     END FUNCTION

  c.CLASS BankAccount
    FUNCTION displayBalance
      PRINT balance
    END FUNCTION
    END CLASS

CLASS calculateBalance
  FUNCTION deposit(amount)
    SET balance to balance + amount
  END FUNCTION

  FUNCTION withdraw(amount)
    IF balance > amount THEN
      SET balance to balance - amount
    END IF
  END FUNCTION
  END CLASS


CLASS ProvideCreditCard
  FUNCTION creditCardOffer
    IF NOT(customer.hasCreditCard) THEN
      CALL offerCreditCard
    END IF
  END FUNCTION
END CLASS


CLASS ProvideCheckingAccount
  FUNCTION checkStatus
    IF NOT(customer.hasCheckingAccount) THEN
      CALL offerCheckingAccount
    END IF
  END FUNCTION
END CLASS


Programming Questions

6. Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum.

function perfectSquare(arr) {
  var reducer = arr.reduce((total, item) => total + item);
    var sqrtNum = Math.sqrt(reducer);
    if(sqrtNum  % 1 !== 0) {
      return reducer;
  }
    else {
      return sqrtNum;
  }
};

7. Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

function duplicateItem(arr) {
  for(i=0; i<arr.length; i++) {
	for(a=1; a<arr.length; a++) {
    if (i !== a && arr[i] === arr[a]) {
      return true;
      }
    }
  }
      return false;
  }
